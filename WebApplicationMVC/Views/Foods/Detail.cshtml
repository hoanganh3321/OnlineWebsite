@model ClassLibraryDATA.DTO.FoodDTO

<h2>Chi tiết món ăn</h2>

@if (Model == null)
{
    <p class="text-danger">Không tìm thấy món ăn.</p>
}
else
{
    <div class="row">

        <div class="col-md-6">
            <div class="card" style="width: 100%;">
                <img src="@Model.ImageUrl" class="card-img-top" alt="@Model.Name" />
                <div class="card-body">
                    <h5 class="card-title">@Model.Name</h5>
                    <p class="card-text">@Model.Description</p>
                    <p><strong>Giá:</strong> @Model.Price.ToString("N0") VNĐ</p>
                    <p><strong>Danh mục:</strong> @(Model.Category?.CategoryName ?? "Không có danh mục")</p>
                    <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">Quay lại</a>

                    @if (Context.Session.GetString("UserRole") == "Customer")
                    {
                        <form method="post" asp-action="Order" asp-controller="Orders" class="mt-2">
                            <input type="hidden" name="foodId" value="@Model.FoodId" />
                            <label for="quantity">Số lượng:</label>
                            <input type="number" id="quantity" name="quantity" value="1" min="1"
                                   class="form-control"
                                   style="width: 100px; display: inline-block;" />
                            @if (Model.IsAvailable == true)
                            {
                                <button type="submit" class="btn btn-success mt-2">Đặt món ngay</button>
                            }
                            else
                            {
                                <a>Hết hàng</a>
                            }
                        </form>
                    }
                </div>
            </div>
        </div>


        <div class="col-md-6">
            <h3>Đánh giá món ăn</h3>
            <div id="reviewList" class="mt-3 border rounded p-2" style="max-height: 400px; overflow-y: auto;">
                <p>Đang tải đánh giá...</p>
            </div>

            @if (Context.Session.GetString("UserRole") == "Customer")
            {
                <div class="mt-3">
                    <h4>Gửi đánh giá của bạn</h4>
                    <form id="reviewForm">
                        <input type="hidden" id="foodId" value="@Model.FoodId" />
                        <label>Chọn số sao (1-5):</label>
                        <input type="number" id="rating" min="1" max="5" required class="form-control" style="width:120px" />
                        <label>Bình luận:</label>
                        <textarea id="comment" class="form-control" required></textarea>
                        <button type="submit" class="btn btn-primary mt-2">Gửi đánh giá</button>
                    </form>
                </div>
            }
        </div>
    </div>
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const foodId = "@Model.FoodId";


        async function loadReviews() {
            const res = await fetch(`https://localhost:7224/api/ProductReview/${foodId}`);
            const reviews = await res.json();
            const container = document.getElementById("reviewList");
            container.innerHTML = "";
            reviews.forEach(r => {
                container.innerHTML += `
                    <div class="border rounded p-2 mb-2">
                        <strong>${r.customerName  || "Khách hàng"}</strong>
                        <span>⭐ ${r.rating} / 5</span>
                        <p>${r.comment}</p>
                        <small>${new Date(r.createdAt).toLocaleString()}</small>
                        ${r.replies && r.replies.length > 0 ?
                            r.replies.map(reply => `
                                <div class="ms-3 mt-1 bg-light p-1 border rounded">
                                    <strong>Admin:</strong> ${reply.comment}
                                    <small class="d-block">${new Date(reply.createdAt).toLocaleString()}</small>
                                </div>`).join('')
                            : ''
                        }
                    </div>`;
            });
        }
        loadReviews();


        const connection = new signalR.HubConnectionBuilder()
            .withUrl("https://localhost:7224/reviewHub")
            .build();

        connection.start().then(() => {
            connection.invoke("JoinProductGroup", foodId);
        });

        connection.on("ReceiveReview", (review) => {
            document.getElementById("reviewList").innerHTML += `
                <div class="border rounded p-2 mb-2">
                    <strong>${review.user?.name || "Khách hàng"}</strong>
                    <span>⭐ ${review.rating} / 5</span>
                    <p>${review.comment}</p>
                    <small>${new Date(review.createdAt).toLocaleString()}</small>
                </div>`;
        });


        document.getElementById("reviewForm")?.addEventListener("submit", async (e) => {
            e.preventDefault();
            const rating = document.getElementById("rating").value;
            const comment = document.getElementById("comment").value;

            const res = await fetch("https://localhost:7224/api/ProductReview", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    productId: foodId,
                    customerId: @Context.Session.GetInt32("UserID"),
                    rating: rating,
                    comment: comment,
                    isAdminReply: false,      
                    parentId: null
                })
            });

            if (!res.ok) {
                alert("Gửi đánh giá thất bại!");
            } else {
                document.getElementById("reviewForm").reset();
            }
        });
    </script>
}
<style>
    #reviewList {
        max-height: 400px;
        overflow-y: auto;
        scrollbar-width: thin;
        scrollbar-color: #007bff #f1f1f1;
    }


        #reviewList::-webkit-scrollbar {
            width: 6px;
        }

        #reviewList::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }

        #reviewList::-webkit-scrollbar-thumb {
            background: #007bff;
            border-radius: 10px;
        }

            #reviewList::-webkit-scrollbar-thumb:hover {
                background: #0056b3;
            }
</style>
